<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:yl="clr-namespace:Framework.Controls"
                    xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell"
                    xmlns:interactivity="clr-namespace:Framework">
    <!-- <ControlTemplate x:Key="WindowWin10Template" TargetType="yl:Window"> -->
    <!--     <Border SnapsToDevicePixels="True" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"> -->
    <!--         <Grid Margin="{TemplateBinding Padding}"> -->
    <!--             <Grid.RowDefinitions> -->
    <!--                 <RowDefinition Height="Auto" /> -->
    <!--                 <RowDefinition /> -->
    <!--             </Grid.RowDefinitions> -->
    <!--             <Grid Background="{TemplateBinding NonClientAreaBackground}" Name="PART_NonClientArea" TextElement.Foreground="{TemplateBinding NonClientAreaForeground}"> -->
    <!--                 <Grid.ColumnDefinitions> -->
    <!--                     <ColumnDefinition /> -->
    <!--                     <ColumnDefinition Width="Auto" /> -->
    <!--                 </Grid.ColumnDefinitions> -->
    <!--                 <StackPanel Name="ButtonPanel" shell:WindowChrome.IsHitTestVisibleInChrome="True" UseLayoutRounding="True" VerticalAlignment="Top" Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal"> -->
    <!--                     <Button Background="{TemplateBinding OtherButtonBackground}" Foreground="{TemplateBinding OtherButtonForeground}" Command="shell:SystemCommands.MinimizeWindowCommand" IsTabStop="False" Name="ButtonMin" Height="29" Style="{StaticResource ButtonIcon}" Width="45" hc:IconElement.Geometry="{StaticResource WindowMinGeometry}" BorderThickness="1,0,1,0" hc:IconElement.Width="10" hc:IconElement.Height="10" /> -->
    <!--                     <Button Background="{TemplateBinding OtherButtonBackground}" Foreground="{TemplateBinding OtherButtonForeground}" Command="shell:SystemCommands.MaximizeWindowCommand" IsTabStop="False" Name="ButtonMax" Height="29" Style="{StaticResource ButtonIcon}" Width="46" hc:IconElement.Geometry="{StaticResource WindowMaxGeometry}" BorderThickness="1,0,1,0" hc:IconElement.Width="10" hc:IconElement.Height="10" /> -->
    <!--                     <Button Background="{TemplateBinding OtherButtonBackground}" Foreground="{TemplateBinding OtherButtonForeground}" Command="shell:SystemCommands.RestoreWindowCommand" IsTabStop="False" Name="ButtonRestore" Height="29" Style="{StaticResource ButtonIcon}" Width="46" hc:IconElement.Geometry="{StaticResource WindowRestoreGeometry}" BorderThickness="1,0,1,0" hc:IconElement.Width="10" hc:IconElement.Height="10" /> -->
    <!--                     <Button Background="{TemplateBinding CloseButtonBackground}" Foreground="{TemplateBinding CloseButtonForeground}" Command="shell:SystemCommands.CloseWindowCommand" IsTabStop="False" Name="ButtonClose" Height="29" Style="{StaticResource ButtonIcon}" Width="46" hc:IconElement.Geometry="{StaticResource CloseGeometry}" BorderThickness="1,0,0,0" hc:IconElement.Width="10" hc:IconElement.Height="10" /> -->
    <!--                 </StackPanel> -->
    <!--                 <Grid Grid.Column="0"> -->
    <!--                     <Grid.ColumnDefinitions> -->
    <!--                         <ColumnDefinition Width="Auto" /> -->
    <!--                         <ColumnDefinition Width="Auto" /> -->
    <!--                         <ColumnDefinition /> -->
    <!--                     </Grid.ColumnDefinitions> -->
    <!--                     <Button Name="ButtonIcon" Visibility="{TemplateBinding Icon,Converter={StaticResource Object2VisibilityConverter}}" Command="{x:Static shell:SystemCommands.ShowSystemMenuCommand}" Background="Transparent" Margin="10,0,0,0" shell:WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource ButtonCustom}" VerticalAlignment="Center"> -->
    <!--                         <interactivity:Interaction.Triggers> -->
    <!--                             <interactivity:EventTrigger EventName="MouseDoubleClick"> -->
    <!--                                 <interactivity:InvokeCommandAction Command="{x:Static shell:SystemCommands.CloseWindowCommand}" /> -->
    <!--                             </interactivity:EventTrigger> -->
    <!--                         </interactivity:Interaction.Triggers> -->
    <!--                         <Image IsHitTestVisible="False" Source="{TemplateBinding Icon}" VerticalAlignment="Center" Width="16" Height="16" /> -->
    <!--                     </Button> -->
    <!--                     <TextBlock Grid.Column="1" Text="{TemplateBinding Title}" Padding="10,0,0,0" VerticalAlignment="Center"> -->
    <!--                         <TextBlock.Visibility> -->
    <!--                             <MultiBinding Converter="{StaticResource BooleanArr2VisibilityConverter}"> -->
    <!--                                 <MultiBinding.Bindings> -->
    <!--                                     <Binding Path="ShowTitle" RelativeSource="{RelativeSource TemplatedParent}" /> -->
    <!--                                     <Binding Path="Title" RelativeSource="{RelativeSource TemplatedParent}" Converter="{StaticResource Object2BooleanConverter}" /> -->
    <!--                                 </MultiBinding.Bindings> -->
    <!--                             </MultiBinding> -->
    <!--                         </TextBlock.Visibility> -->
    <!--                     </TextBlock> -->
    <!--                     <ContentPresenter shell:WindowChrome.IsHitTestVisibleInChrome="True" Grid.Column="2" x:Name="ContentPresenterMain" Content="{TemplateBinding NonClientAreaContent}" /> -->
    <!--                 </Grid> -->
    <!--             </Grid> -->
    <!--             <AdornerDecorator Grid.Row="1"> -->
    <!--                 <ContentPresenter ClipToBounds="True" /> -->
    <!--             </AdornerDecorator> -->
    <!--             <ResizeGrip Width="10" Height="10" x:Name="ResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Row="1" IsTabStop="False" Visibility="Collapsed" /> -->
    <!--         </Grid> -->
    <!--     </Border> -->
    <!--     <ControlTemplate.Triggers> -->
    <!--         <Trigger Property="IsActive" Value="False"> -->
    <!--             <Setter Property="Opacity" Value=".8" TargetName="ContentPresenterMain" /> -->
    <!--             <Setter Property="Opacity" Value=".8" TargetName="ButtonPanel" /> -->
    <!--         </Trigger> -->
    <!--         <Trigger Property="WindowState" Value="Maximized"> -->
    <!--             <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonMax" /> -->
    <!--             <Setter Property="Visibility" Value="Visible" TargetName="ButtonRestore" /> -->
    <!--         </Trigger> -->
    <!--         <Trigger Property="WindowState" Value="Normal"> -->
    <!--             <Setter Property="Visibility" Value="Visible" TargetName="ButtonMax" /> -->
    <!--             <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonRestore" /> -->
    <!--         </Trigger> -->
    <!--         <Trigger Property="ResizeMode" Value="NoResize"> -->
    <!--             <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonMin" /> -->
    <!--             <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonMax" /> -->
    <!--             <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonRestore" /> -->
    <!--         </Trigger> -->
    <!--         <Trigger Property="ResizeMode" Value="CanMinimize"> -->
    <!--             <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonMax" /> -->
    <!--             <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonRestore" /> -->
    <!--         </Trigger> -->
    <!--         <Trigger Property="IsMouseOver" Value="True" SourceName="ButtonClose"> -->
    <!--             <Setter Property="Background" TargetName="ButtonClose" Value="{Binding CloseButtonHoverBackground,RelativeSource={RelativeSource TemplatedParent}}" /> -->
    <!--             <Setter Property="Foreground" TargetName="ButtonClose" Value="{Binding CloseButtonHoverForeground,RelativeSource={RelativeSource TemplatedParent}}" /> -->
    <!--         </Trigger> -->
    <!--         <Trigger Property="IsMouseOver" Value="True" SourceName="ButtonMax"> -->
    <!--             <Setter Property="Background" TargetName="ButtonMax" Value="{Binding OtherButtonHoverBackground,RelativeSource={RelativeSource TemplatedParent}}" /> -->
    <!--             <Setter Property="Foreground" TargetName="ButtonMax" Value="{Binding OtherButtonHoverForeground,RelativeSource={RelativeSource TemplatedParent}}" /> -->
    <!--         </Trigger> -->
    <!--         <Trigger Property="IsMouseOver" Value="True" SourceName="ButtonRestore"> -->
    <!--             <Setter Property="Background" TargetName="ButtonRestore" Value="{Binding OtherButtonHoverBackground,RelativeSource={RelativeSource TemplatedParent}}" /> -->
    <!--             <Setter Property="Foreground" TargetName="ButtonRestore" Value="{Binding OtherButtonHoverForeground,RelativeSource={RelativeSource TemplatedParent}}" /> -->
    <!--         </Trigger> -->
    <!--         <Trigger Property="IsMouseOver" Value="True" SourceName="ButtonMin"> -->
    <!--             <Setter Property="Background" TargetName="ButtonMin" Value="{Binding OtherButtonHoverBackground,RelativeSource={RelativeSource TemplatedParent}}" /> -->
    <!--             <Setter Property="Foreground" TargetName="ButtonMin" Value="{Binding OtherButtonHoverForeground,RelativeSource={RelativeSource TemplatedParent}}" /> -->
    <!--         </Trigger> -->
    <!--         <Trigger Property="WindowStyle" Value="None"> -->
    <!--             <Setter Property="ShowNonClientArea" Value="False" /> -->
    <!--         </Trigger> -->
    <!--         <MultiTrigger> -->
    <!--             <MultiTrigger.Conditions> -->
    <!--                 <Condition Property="ResizeMode" Value="CanResizeWithGrip" /> -->
    <!--                 <Condition Property="WindowState" Value="Normal" /> -->
    <!--             </MultiTrigger.Conditions> -->
    <!--             <Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible" /> -->
    <!--         </MultiTrigger> -->
    <!--     </ControlTemplate.Triggers> -->
    <!-- </ControlTemplate> -->
    <!-- -->
    <!-- <ControlTemplate x:Key="WindowWin10ExtendContentToNonClientTemplate" TargetType="hc:Window"> -->
    <!--     <Border SnapsToDevicePixels="True" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"> -->
    <!--         <hc:SimplePanel Margin="{TemplateBinding Padding}"> -->
    <!--             <AdornerDecorator> -->
    <!--                 <hc:SimplePanel> -->
    <!--                     <ContentPresenter ClipToBounds="True" /> -->
    <!--                     <Grid Background="{TemplateBinding NonClientAreaBackground}" Name="PART_NonClientArea" TextElement.Foreground="{TemplateBinding NonClientAreaForeground}" VerticalAlignment="Top"> -->
    <!--                         <Grid.ColumnDefinitions> -->
    <!--                             <ColumnDefinition /> -->
    <!--                             <ColumnDefinition Width="Auto" /> -->
    <!--                         </Grid.ColumnDefinitions> -->
    <!--                         <StackPanel Name="ButtonPanel" shell:WindowChrome.IsHitTestVisibleInChrome="True" UseLayoutRounding="True" VerticalAlignment="Top" Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal"> -->
    <!--                             <Button Background="{TemplateBinding OtherButtonBackground}" Foreground="{TemplateBinding OtherButtonForeground}" Command="shell:SystemCommands.MinimizeWindowCommand" IsTabStop="False" Name="ButtonMin" Height="29" Style="{StaticResource ButtonIcon}" Width="45" hc:IconElement.Geometry="{StaticResource WindowMinGeometry}" BorderThickness="1,0,1,0" hc:IconElement.Width="10" hc:IconElement.Height="10" /> -->
    <!--                             <Button Background="{TemplateBinding OtherButtonBackground}" Foreground="{TemplateBinding OtherButtonForeground}" Command="shell:SystemCommands.MaximizeWindowCommand" IsTabStop="False" Name="ButtonMax" Height="29" Style="{StaticResource ButtonIcon}" Width="46" hc:IconElement.Geometry="{StaticResource WindowMaxGeometry}" BorderThickness="1,0,1,0" hc:IconElement.Width="10" hc:IconElement.Height="10" /> -->
    <!--                             <Button Background="{TemplateBinding OtherButtonBackground}" Foreground="{TemplateBinding OtherButtonForeground}" Command="shell:SystemCommands.RestoreWindowCommand" IsTabStop="False" Name="ButtonRestore" Height="29" Style="{StaticResource ButtonIcon}" Width="46" hc:IconElement.Geometry="{StaticResource WindowRestoreGeometry}" BorderThickness="1,0,1,0" hc:IconElement.Width="10" hc:IconElement.Height="10" /> -->
    <!--                             <Button Background="{TemplateBinding CloseButtonBackground}" Foreground="{TemplateBinding CloseButtonForeground}" Command="shell:SystemCommands.CloseWindowCommand" IsTabStop="False" Name="ButtonClose" Height="29" Style="{StaticResource ButtonIcon}" Width="46" hc:IconElement.Geometry="{StaticResource CloseGeometry}" BorderThickness="1,0,0,0" hc:IconElement.Width="10" hc:IconElement.Height="10" /> -->
    <!--                         </StackPanel> -->
    <!--                         <Grid Grid.Column="0"> -->
    <!--                             <Grid.ColumnDefinitions> -->
    <!--                                 <ColumnDefinition Width="Auto" /> -->
    <!--                                 <ColumnDefinition Width="Auto" /> -->
    <!--                                 <ColumnDefinition /> -->
    <!--                             </Grid.ColumnDefinitions> -->
    <!--                             <Button Name="ButtonIcon" Visibility="{TemplateBinding Icon,Converter={StaticResource Object2VisibilityConverter}}" Command="{x:Static shell:SystemCommands.ShowSystemMenuCommand}" Background="Transparent" Margin="10,0,0,0" shell:WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource ButtonCustom}" VerticalAlignment="Center"> -->
    <!--                                 <interactivity:Interaction.Triggers> -->
    <!--                                     <interactivity:EventTrigger EventName="MouseDoubleClick"> -->
    <!--                                         <interactivity:InvokeCommandAction Command="{x:Static shell:SystemCommands.CloseWindowCommand}" /> -->
    <!--                                     </interactivity:EventTrigger> -->
    <!--                                 </interactivity:Interaction.Triggers> -->
    <!--                                 <Image IsHitTestVisible="False" Source="{TemplateBinding Icon}" VerticalAlignment="Center" Width="16" Height="16" /> -->
    <!--                             </Button> -->
    <!--                             <TextBlock Grid.Column="1" Text="{TemplateBinding Title}" Padding="10,0,0,0" VerticalAlignment="Center"> -->
    <!--                                 <TextBlock.Visibility> -->
    <!--                                     <MultiBinding Converter="{StaticResource BooleanArr2VisibilityConverter}"> -->
    <!--                                         <MultiBinding.Bindings> -->
    <!--                                             <Binding Path="ShowTitle" RelativeSource="{RelativeSource TemplatedParent}" /> -->
    <!--                                             <Binding Path="Title" RelativeSource="{RelativeSource TemplatedParent}" Converter="{StaticResource Object2BooleanConverter}" /> -->
    <!--                                         </MultiBinding.Bindings> -->
    <!--                                     </MultiBinding> -->
    <!--                                 </TextBlock.Visibility> -->
    <!--                             </TextBlock> -->
    <!--                         </Grid> -->
    <!--                     </Grid> -->
    <!--                 </hc:SimplePanel> -->
    <!--             </AdornerDecorator> -->
    <!--             <ResizeGrip Width="10" Height="10" x:Name="ResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Row="1" IsTabStop="False" Visibility="Collapsed" /> -->
    <!--         </hc:SimplePanel> -->
    <!--     </Border> -->
    <!--     <ControlTemplate.Triggers> -->
    <!--         <Trigger Property="IsActive" Value="False"> -->
    <!--             <Setter Property="Opacity" Value=".8" TargetName="ButtonPanel" /> -->
    <!--         </Trigger> -->
    <!--         <Trigger Property="WindowState" Value="Maximized"> -->
    <!--             <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonMax" /> -->
    <!--             <Setter Property="Visibility" Value="Visible" TargetName="ButtonRestore" /> -->
    <!--         </Trigger> -->
    <!--         <Trigger Property="WindowState" Value="Normal"> -->
    <!--             <Setter Property="Visibility" Value="Visible" TargetName="ButtonMax" /> -->
    <!--             <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonRestore" /> -->
    <!--         </Trigger> -->
    <!--         <Trigger Property="ResizeMode" Value="NoResize"> -->
    <!--             <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonMin" /> -->
    <!--             <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonMax" /> -->
    <!--             <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonRestore" /> -->
    <!--         </Trigger> -->
    <!--         <Trigger Property="ResizeMode" Value="CanMinimize"> -->
    <!--             <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonMax" /> -->
    <!--             <Setter Property="Visibility" Value="Collapsed" TargetName="ButtonRestore" /> -->
    <!--         </Trigger> -->
    <!--         <Trigger Property="IsMouseOver" Value="True" SourceName="ButtonClose"> -->
    <!--             <Setter Property="Background" TargetName="ButtonClose" Value="{Binding CloseButtonHoverBackground,RelativeSource={RelativeSource TemplatedParent}}" /> -->
    <!--             <Setter Property="Foreground" TargetName="ButtonClose" Value="{Binding CloseButtonHoverForeground,RelativeSource={RelativeSource TemplatedParent}}" /> -->
    <!--         </Trigger> -->
    <!--         <Trigger Property="IsMouseOver" Value="True" SourceName="ButtonMax"> -->
    <!--             <Setter Property="Background" TargetName="ButtonMax" Value="{Binding OtherButtonHoverBackground,RelativeSource={RelativeSource TemplatedParent}}" /> -->
    <!--             <Setter Property="Foreground" TargetName="ButtonMax" Value="{Binding OtherButtonHoverForeground,RelativeSource={RelativeSource TemplatedParent}}" /> -->
    <!--         </Trigger> -->
    <!--         <Trigger Property="IsMouseOver" Value="True" SourceName="ButtonRestore"> -->
    <!--             <Setter Property="Background" TargetName="ButtonRestore" Value="{Binding OtherButtonHoverBackground,RelativeSource={RelativeSource TemplatedParent}}" /> -->
    <!--             <Setter Property="Foreground" TargetName="ButtonRestore" Value="{Binding OtherButtonHoverForeground,RelativeSource={RelativeSource TemplatedParent}}" /> -->
    <!--         </Trigger> -->
    <!--         <Trigger Property="IsMouseOver" Value="True" SourceName="ButtonMin"> -->
    <!--             <Setter Property="Background" TargetName="ButtonMin" Value="{Binding OtherButtonHoverBackground,RelativeSource={RelativeSource TemplatedParent}}" /> -->
    <!--             <Setter Property="Foreground" TargetName="ButtonMin" Value="{Binding OtherButtonHoverForeground,RelativeSource={RelativeSource TemplatedParent}}" /> -->
    <!--         </Trigger> -->
    <!--         <Trigger Property="WindowStyle" Value="None"> -->
    <!--             <Setter Property="ShowNonClientArea" Value="False" /> -->
    <!--         </Trigger> -->
    <!--         <MultiTrigger> -->
    <!--             <MultiTrigger.Conditions> -->
    <!--                 <Condition Property="ResizeMode" Value="CanResizeWithGrip" /> -->
    <!--                 <Condition Property="WindowState" Value="Normal" /> -->
    <!--             </MultiTrigger.Conditions> -->
    <!--             <Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible" /> -->
    <!--         </MultiTrigger> -->
    <!--     </ControlTemplate.Triggers> -->
    <!-- </ControlTemplate> -->
    <!-- -->
    <!-- <Style x:Key="WindowWin10" TargetType="hc:Window"> -->
    <!--     <Setter Property="BorderThickness" Value="1"/> -->
    <!--     <Setter Property="BorderBrush" Value="#262e2f"/> -->
    <!--     <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/> -->
    <!--     <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/> -->
    <!--     <Setter Property="UseLayoutRounding" Value="True"/> -->
    <!--     <Setter Property="NonClientAreaBackground" Value="{DynamicResource RegionBrush}"/> -->
    <!--     <Setter Property="NonClientAreaForeground" Value="{DynamicResource PrimaryTextBrush}"/> -->
    <!--     <Setter Property="CloseButtonBackground" Value="Transparent"/> -->
    <!--     <Setter Property="CloseButtonForeground" Value="{DynamicResource PrimaryTextBrush}"/> -->
    <!--     <Setter Property="CloseButtonHoverBackground" Value="#e81123"/> -->
    <!--     <Setter Property="CloseButtonHoverForeground" Value="White"/> -->
    <!--     <Setter Property="OtherButtonBackground" Value="Transparent"/> -->
    <!--     <Setter Property="OtherButtonForeground" Value="{DynamicResource PrimaryTextBrush}"/> -->
    <!--     <Setter Property="OtherButtonHoverBackground" Value="{DynamicResource DarkMaskBrush}"/> -->
    <!--     <Setter Property="OtherButtonHoverForeground" Value="{DynamicResource PrimaryTextBrush}"/> -->
    <!--     <Setter Property="Template" Value="{StaticResource WindowWin10Template}" /> -->
    <!--     <Style.Triggers> -->
    <!--         <Trigger Property="hc:WindowAttach.ExtendContentToNonClientArea" Value="true"> -->
    <!--             <Setter Property="Template" Value="{StaticResource WindowWin10ExtendContentToNonClientTemplate}" /> -->
    <!--         </Trigger> -->
    <!--     </Style.Triggers> -->
    <!-- </Style> -->
    <!-- -->
    <!-- <Style x:Key="WindowBlur" BasedOn="{StaticResource WindowWin10}" TargetType="hc:BlurWindow"> -->
    <!--     <Setter Property="Background" Value="Transparent"/> -->
    <!-- </Style> -->

</ResourceDictionary>
